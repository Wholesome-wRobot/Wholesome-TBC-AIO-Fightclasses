using System;
using System.Collections.Generic;
using System.Linq;
using WholesomeTBCAIO.Helpers;
using WholesomeTBCAIO.Settings;
using WholesomeToolbox;
using wManager.Wow.Helpers;
using wManager.Wow.ObjectManager;

namespace WholesomeTBCAIO.Managers.TalentManager
{
    public class TalentManager : ITalentManager
    {
        private List<string> _talentsCodes = new List<string> { };
        private BaseSettings _settings;
        private bool _isAssigning = false;

        public TalentManager(BaseSettings settings)
        {
            _settings = settings;
            _talentsCodes = GetTalentCode(Enums.GetSpecDictionary()[settings.Specialization]);
        }

        public void Initialize()
        {
            if (_settings.AssignTalents)
            {
                _talentsCodes = _settings.UseDefaultTalents ?
                    GetTalentCode(Enums.GetSpecDictionary()[_settings.Specialization])
                    : _settings.TalentCodes;

                if (_talentsCodes.Count() > 0)
                    Logger.Log($"Talents code [{_settings.Specialization}]: {_talentsCodes.Last()}");
                else
                    Logger.LogError("No talent code");

                Pulse();
                EventsLuaWithArgs.OnEventsLuaStringWithArgs += EventsWithArgsHandler;
            }
        }

        public void Dispose()
        {
            EventsLuaWithArgs.OnEventsLuaStringWithArgs -= EventsWithArgsHandler;
        }

        private void EventsWithArgsHandler(string id, List<string> args)
        {
            if (id == "PLAYER_LEVEL_UP"
                || id == "PLAYER_TALENT_UPDATE"
                || id == "CHARACTER_POINTS_CHANGED")
            {
                Pulse();
            }
        }

        // Talent pulse
        private void Pulse()
        {
            if (Conditions.InGameAndConnectedAndProductStartedNotInPause
                && ObjectManager.Me.IsAlive
                && !_isAssigning)
            {
                _isAssigning = true;
                WTTalent.TBCAssignTalents(_talentsCodes);
                _isAssigning = false;
            }
        }

        // Set the default talents codes to use
        private List<string> GetTalentCode(Enums.Specs spec)
        {
            switch (spec)
            {
                // DRUID
                case Enums.Specs.DruidFeral:
                    return new List<string>
                    {
                        "00000000000000000000050302203002000000000000000000000000000000",
                        "00000000000000000000050302203032010000000000000000000000000000",
                        "00000000000000000000050302203032212500120000000000000000000000",
                        "00000000000000000000050302203032212520125100000000000000000000",
                        "00000000000000000000050302203032212520125105050001000000000000",
                        "00000000000000000000052303203232212530125105053001000000000000"
                    };
                case Enums.Specs.DruidFeralDPSParty:
                    return new List<string>
                    {
                        "00000000000000000000050302203002000000000000000000000000000000",
                        "00000000000000000000050302203032010000000000000000000000000000",
                        "00000000000000000000050302203032212500120000000000000000000000",
                        "00000000000000000000050302203032212520125100000000000000000000",
                        "00000000000000000000050302203032212520125105050001000000000000",
                        "00000000000000000000052303203232212530125105053001000000000000"
                    };
                case Enums.Specs.DruidFeralTankParty:
                    return new List<string>
                    {
                        "00000000000000000000050302010000000000000000000000000000000000",
                        "00000000000000000000050303211030000000000000000000000000000000",
                        "00000000000000000000050303213030010000000000000000000000000000",
                        "00000000000000000000052303213032010500120000000000000000000000",
                        "00000000000000000000052303213032010520125100000000000000000000",
                        "00000000000000000000055303213232010530125105500001000000000000",
                        "00000000000000000000055303213232010530125105500301000000000000"
                    };
                case Enums.Specs.DruidRestorationParty:
                    return new List<string>
                    {
                        "00000000000000000000000000000000000000000050050320030000000000",
                        "00000000000000000000000000000000000000000050050320231500401000",
                        "00000000000000000000000000000000000000000050050340431500401051",
                        "00000000000000000000000000000000000000000050050350531500531351",
                        "01432001000000000000000000000000000000000050050350531500531351"
                    };
                // HUNTER
                case Enums.Specs.HunterBeastMaster:
                    return new List<string>
                    {
                        "5020122120501000000000000000000000000000000000000000000000000000",
                        "5020122122501205010000000000000000000000000000000000000000000000",
                        "5020122142501225010510000000000000000000000000000000000000000000",
                        "5020122142501225010510550200000000000000000000000000000000000000",
                        "5020322152501225010510555200000000000000000000000000000000000000"
                    };
                case Enums.Specs.HunterBeastMasterParty:
                    return new List<string>
                    {
                        "5020122120501000000000000000000000000000000000000000000000000000",
                        "5020122122501205010000000000000000000000000000000000000000000000",
                        "5020122142501225010510000000000000000000000000000000000000000000",
                        "5020122142501225010510550200000000000000000000000000000000000000",
                        "5020322152501225010510555200000000000000000000000000000000000000"
                    };
                // MAGE
                case Enums.Specs.MageFrost:
                    return new List<string>
                    {
                        "0000000000000000000000000000000000000000000000500320010000000000000",
                        "0000000000000000000000000000000000000000000000504320010005010000000",
                        "0000000000000000000000000000000000000000000000505323010005010051000",
                        "0000000000000000000000000000000000000000000000505323310005010051241",
                        "0000000000000000000000000000000000000000000000535323310035013251551",
                        "0000000000000000000000005000000000000000000000535323310035013251551"
                    };
                case Enums.Specs.MageFrostParty:
                    return new List<string>
                    {
                        "0000000000000000000000000000000000000000000000502300010000000000000",
                        "0000000000000000000000000000000000000000000000503300310030000000000",
                        "0000000000000000000000000000000000000000000000503320310030010000000",
                        "0000000000000000000000000000000000000000000000505320310032010051000",
                        "0000000000000000000000000000000000000000000000535320310033010051051",
                        "2300050000000000000000000000000000000000000000535323310033010251551"
                    };
                case Enums.Specs.MageArcane:
                    return new List<string>
                    {
                        "0050050000000000000000000000000000000000000000000000000000000000000",
                        "0052050310030000000000000000000000000000000000000000000000000000000",
                        "0152050310030140320120000000000000000000000000000000000000000000000",
                        "0152050310030150330125000000000000000000000000000000000000000000000",
                        "0152050310030150330125100000000000000000000000000000000000000000000",
                        "2552050312030152333125100000000000000000000000000000000000000000000",
                        "2552050312030152333125105002000000000000000000000000000000000000000"
                    };
                case Enums.Specs.MageArcaneParty:
                    return new List<string>
                    {
                        "2300050300000000000000000000000000000000000000000000000000000000000",
                        "2500052300030150310120000000000000000000000000000000000000000000000",
                        "2500052300030150330125000000000000000000000000535000010000000000000",
                        "2500052300030150330125000000000000000000000000535000310030010000000"
                    };
                case Enums.Specs.MageFire:
                    return new List<string>
                    {
                        "0000000000000000000000050500000200000000000000000000000000000000000",
                        "0000000000000000000000053500000200300000000000000000000000000000000",
                        "0000000000000000000000055500000200303000000000000000000000000000000",
                        "0000000000000000000000055500001200303105010000000000000000000000000",
                        "0000000000000000000000055500001200303105311510000000000000000000000",
                        "0000000000000000000000055500001200333105312510030000000000000000000",
                        "2300050010000000000000055500001200333105312510030000000000000000000",
                        "2302050010000000000000055500001200333105312510030000000000000000000"
                    };
                case Enums.Specs.MageFireParty:
                    return new List<string>
                    {
                        "0000000000000000000000050500001000000000000000000000000000000000000",
                        "0000000000000000000000050500201230203000000000000000000000000000000",
                        "0000000000000000000000050500201230303105010000000000000000000000000",
                        "0000000000000000000000050500201230303105311510030000000000000000000",
                        "2300050000000000000000050521201230333105312510030000000000000000000"
                    };
                // PALADIN
                case Enums.Specs.PaladinRetribution:
                    return new List<string>
                    {
                        "0000000000000000000000000000000000000000000523005130000000000000",
                        "0000000000000000000000000000000000000000001523005130000100000000",
                        "0000000000000000000000000000000000000000001523005130003115321041",
                        "5500300000000000000000000000000000000000005523005130003125331051"
                    };
                case Enums.Specs.PaladinRetributionParty:
                    return new List<string>
                    {
                        "0000000000000000000000000000000000000000000523000100000000000000",
                        "0000000000000000000000000000000000000000000523005100030000000000",
                        "0000000000000000000000000000000000000000000523005110033115001000",
                        "0000000000000000000000000000000000000000000523005110033115131051",
                        "0000000000000000000050300000000000000000000523005110033115131051",
                        "0000000000000000000050300000000000000000000523005120033125331051",
                        "0000000000000000000050320100000000000000000523005120033125331051",
                        "5000000000000000000050320100000000000000000523005120033125331051"
                    };
                case Enums.Specs.PaladinProtectionParty:
                    return new List<string>
                    {
                        "0000000000000000000005005003000000000000000000000000000000000000",
                        "0000000000000000000005005113500001000000000000000000000000000000",
                        "0000000000000000000005205123500011005010000000000000000000000000",
                        "0000000000000000000005205123500011005014510000000000000000000000",
                        "0000000000000000000005205123500011025215510500500000000000000000",
                        "0000000000000000000005205123500011025215510520500000000000000000",
                        "0000000000000000000005305133500021025215510520500000000000000000"
                    };
                case Enums.Specs.PaladinHolyParty:
                    return new List<string>
                    {
                        "0550311050013000000000000000000000000000000000000000000000000000",
                        "0550311051013050100000000000000000000000000000000000000000000000",
                        "0550311052013053105150320100000000000000005000000000000000000000",
                        "0550312152013253105150320100000000000000005000000000000000000000"
                    };
                case Enums.Specs.PaladinHolyRaid:
                    return new List<string>
                    {
                        "0550311252013253105150023100000000000000005000000000000000000000"
                    };
                // PRIEST
                case Enums.Specs.PriestShadow:
                    return new List<string>
                    {
                        "0000000000000000000000000000000000000000000500230010000000000000",
                        "0000000000000000000000000000000000000000000500232310041120000000",
                        "0000000000000000000000000000000000000000000500232310041121051451",
                        "0500320130000000000000000000000000000000000500232510051123051551"
                    };
                case Enums.Specs.PriestShadowParty:
                    return new List<string>
                    {
                        "0000000000000000000000000000000000000000000503200310000000000000",
                        "0000000000000000000000000000000000000000000503210310050103000000",
                        "0000000000000000000000000000000000000000000503220310050103051451",
                        "5002300130000000000000000000000000000000000503250310050123051551"
                    };
                case Enums.Specs.PriestHolyParty:
                    return new List<string>
                    {
                        "0000000000000000000000032050030000000000000000000000000000000000",
                        "0000000000000000000000232050030300000000000000000000000000000000",
                        "0000000000000000000000234050030300140530000000000000000000000000",
                        "0000000000000000000000235050030300150530030000000000000000000000",
                        "5002301130500120000000235050030300150530030000000000000000000000"
                    };
                case Enums.Specs.PriestHolyRaid:
                    return new List<string>
                    {
                        "0000000000000000000000230050000000000000000000000000000000000000",
                        "0000000000000000000000235050032000100000000000000000000000000000",
                        "0000000000000000000000235050032002150520051000000000000000000000",
                        "5002300100000000000000235050032002150520051000000000000000000000",
                        "5002301130500000000000235050032002150520051000000000000000000000"
                    };
                // ROGUE
                case Enums.Specs.RogueCombat:
                    return new List<string>
                    {
                        "0000000000000000000000230050000000000000000000000000000000000000000",
                        "0000000000000000000000230550100040100000000000000000000000000000000",
                        "0000000000000000000000230550100050130020000000000000000000000000000",
                        "0000000000000000000000230550100050150021010000000000000000000000000",
                        "0000000000000000000000230550100050150023210510000000000000000000000",
                        "0000000000000000000000230550100050150023210515000300000000000000000",
                        "3053001000000000000000230550100050150023210515000300000000000000000"
                    };
                case Enums.Specs.RogueCombatParty:
                    return new List<string>
                    {
                        "0000000000000000000000230050000000000000000000000000000000000000000",
                        "0000000000000000000000233050020050140000000000000000000000000000000",
                        "0000000000000000000000233050020050140023010000000000000000000000000",
                        "0000000000000000000000233050020050150023211510000000000000000000000",
                        "0053201054000000000000233050020050150023211510000000000000000000000"
                    };
                // SHAMAN
                case Enums.Specs.ShamanEnhancement:
                    return new List<string>
                    {
                        "0000000000000000000050052301040010000000000000000000000000000",
                        "0000000000000000000050052301050013050110000000000000000000000",
                        "0000000000000000000050052301050013053115100000000000000000000",
                        "2500310000000000000050052321450013353115100000000000000000000"
                    };
                case Enums.Specs.ShamanEnhancementParty:
                    return new List<string>
                    {
                        "0000000000000000000050050001000000000000000000000000000000000",
                        "0000000000000000000050050021000000000000000000000000000000000",
                        "0000000000000000000050052021050013000000000000000000000000000",
                        "0000000000000000000050052021050113050110000000000000000000000",
                        "0000000000000000000050052021050113053115100000000000000000000",
                        "2500305020000000000050052021050113353115100000000000000000000"
                    };
                case Enums.Specs.ShamanElemental:
                    return new List<string>
                    {
                        "5200310503000000000000000000000000000000000000000000000000000",
                        "5300310503001405100000000000000000000000000000000000000000000",
                        "5500310503001515105100000000000000000000000000000000000000000",
                        "5500310503001535105150000300000000000000005005000000000000000",
                    };
                case Enums.Specs.ShamanRestoParty:
                    return new List<string>
                    {
                        "0000000000000000000000000000000000000000052030001000000000000",
                        "0000000000000000000000000000000000000000055030001150010000000",
                        "0000000000000000000000000000000000000000055030001250310510000",
                        "0000000000000000000000000000000000000000055030001354310510311",
                        "5000000000000000000000000000000000000000055035001355310510321",
                        "5000000000000000000000000000000000000000055035051355310510321",
                        "5003000000000000000000000000000000000000055035051355310510321"
                    };
                case Enums.Specs.ShamanRestoRaid:
                    return new List<string>
                    {
                        "0000000000000000000000000000000000000000052030001000000000000",
                        "0000000000000000000000000000000000000000055030001150010000000",
                        "0000000000000000000000000000000000000000055030001250310510000",
                        "0000000000000000000000000000000000000000055030001354310510311",
                        "5000000000000000000000000000000000000000055035001355310510321",
                        "5000000000000000000000000000000000000000055035051355310510321",
                        "5003000000000000000000000000000000000000055035051355310510321"
                    };
                // WARLOCK
                case Enums.Specs.WarlockDemonology:
                    return new List<string>
                    {
                        "0000000000000000000000052300100000000000000000000000000000000000",
                        "0000000000000000000000052310130050100000000000000000000000000000",
                        "0000000000000000000000052330132050100501000000000000000000000000",
                        "0000000000000000000000052330132050102501251000000000000000000000",
                        "0000000000000000000000052330133050102531351000000000000000000000",
                        "1500222210000000000000052330133050102531351000000000000000000000"
                    };
                case Enums.Specs.WarlockAffliction:
                    return new List<string>
                    {
                        "0502210010000000000000000000000000000000000000000000000000000000",
                        "0502222110230100000000000000000000000000000000000000000000000000",
                        "0502222110234105500000000000000000000000000000000000000000000000",
                        "0502222510234105510010000000000000000000000000000000000000000000",
                        "0502222510234105510010052300100000000000000000000000000000000000",
                        "0502222510234105510010052300100000000000000000000000000000000000",
                        "1502222510235105510010052330130100000000000000000000000000000000"
                    };
                case Enums.Specs.WarlockAfflictionParty:
                    return new List<string>
                    {
                        "0502210410230100000000000000000000000000000000000000000000000000",
                        "0502210410234105500300000000000000000000000000000000000000000000",
                        "0502210411235105500310000000000000000000000000000000000000000000",
                        "0502210411235105500310000000000000000000000505000500200000000000",
                        "0502210412235105500310200000000000000000000505000500200000000000"
                    };
                // WARRIOR
                case Enums.Specs.WarriorFury:
                    return new List<string>
                    {
                        "000000000000000000000000505000500501200000000000000000000000000000",
                        "000000000000000000000000505000520501205010000000000000000000000000",
                        "000000000000000000000000505000520501205311510000000000000000000000",
                        "000000000000000000000000505000550501205311510000000000000000000000",
                        "320230013000000000000000505000550501205311510000000000000000000000",
                        "320240013020000000000000505000550501205311510000000000000000000000"
                    };
                case Enums.Specs.WarriorFuryParty:
                    return new List<string>
                    {
                        "000000000000000000000000505000500501200000000000000000000000000000",
                        "000000000000000000000000505000520501205010000000000000000000000000",
                        "000000000000000000000000505000520501205311510000000000000000000000",
                        "000000000000000000000000505000550501205311510000000000000000000000",
                        "320230013000000000000000505000550501205311510000000000000000000000",
                        "320240013020000000000000505000550501205311510000000000000000000000"
                    };
                case Enums.Specs.WarriorProtectionParty:
                    return new List<string>
                    {
                        "000000000000000000000000000000000000000000000055011000000000000000",
                        "000000000000000000000000000000000000000000000055211033000100000000",
                        "000000000000000000000000000000000000000000001055511033000103201300",
                        "000000000000000000000000000000000000000000001055511033000103231331",
                        "050000000000000000000000000000000000000000001055511033000103231331",
                        "350000000000000000000000501000000000000000002055511033000103531351"
                    };

                default:
                    throw new Exception($"Couldn't find talent codes for {spec}.");
            }
        }
    }
}
